name: Nuget package publish and release

on:
  release:
    types: [released]

env:
   NUGET_TOKEN: ${{ secrets.NUGET_TOKEN }}

jobs:

  nuget:
    name: ðŸ“¦ Nuget - Publish package
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - name: ðŸ›’ Checkout
        uses: actions/checkout@v3
      - name: Verify commit exists in origin/master
        run: |
          git fetch --no-tags --prune --depth=1 origin +refs/heads/*:refs/remotes/origin/*
          git branch --remote --contains | grep origin/master

      - name: ðŸŸ£ Setup .NET 7.0
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 7.0.x

      - name: ðŸ“¦ Pack
        run: | 
          dotnet pack SpeciesDatabaseApi --configuration Release --output .

      - name: ðŸš€ Push nuget.org
        run: dotnet nuget push SpeciesDatabaseApi*.nupkg --source https://api.nuget.org/v3/index.json --api-key ${NUGET_TOKEN} --skip-duplicate

  publish:
    name: Publish for ${{ matrix.os_identifier }}
    runs-on: ${{ matrix.os }}
    env:
      os_identifier: ${{ matrix.os_identifier }}
      publish_folder: "SpeciesDatabaseCmd_$os_identifier_${{ github.ref_name }}"
      artifact_name: "$publish_folder.zip"
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            os_identifier: linux-x64

          - os: windows-latest
            os_identifier: win-x64  
            
          - os: macos-latest
            os_identifier: osx-x64

          - os: macos-latest
            os_identifier: osx-arm64
            
    steps:
      - name: ðŸ›’ Checkout
        uses: actions/checkout@v3

      - name: Verify commit exists in origin/master
        run: |
          git fetch --no-tags --prune --depth=1 origin +refs/heads/*:refs/remotes/origin/*
          git branch --remote --contains | grep origin/master

      - name: ðŸŸ£ Setup .NET 7.0
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 7.0.x

      - name: ðŸ”§ Build
        run: | 
          dotnet publish SpeciesDatabaseCmd -o $publish_folder -c Release -r $os_identifier -p:PublishReadyToRun=true --self-contained

      - name: ðŸ“¦ Zip
        uses: vimtor/action-zip@v1
        with:
         files: ${publish_folder}/
         recursive: true
         dest: ${artifact_name}

      - name: ðŸš€ Upload binaries to release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: $artifact_name
          asset_name: $artifact_name
          tag: ${{ github.ref }}